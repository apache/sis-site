Title:  Source code
Notice: Licensed to the Apache Software Foundation (ASF) under one
        or more contributor license agreements.  See the NOTICE file
        distributed with this work for additional information
        regarding copyright ownership.  The ASF licenses this file
        to you under the Apache License, Version 2.0 (the
        "License"); you may not use this file except in compliance
        with the License.  You may obtain a copy of the License at
        .
          http://www.apache.org/licenses/LICENSE-2.0
        .
        Unless required by applicable law or agreed to in writing,
        software distributed under the License is distributed on an
        "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
        KIND, either express or implied.  See the License for the
        specific language governing permissions and limitations
        under the License.


Apache SIS source code is maintained using [Git][git] version control.
Additional data not included in SIS releases are maintained separately using [Subversion][subversion] version control.
Those data include in particular the [EPSG geodetic dataset](epsg.html) and are subject to different licensing terms.
The Git repository is [mirrored on GitHub][github-sis] and the non-free data can be [browsed online][viewvc-non-free].
For fetching the source code and those additional data, use the following commands:

    :::bash
    git clone https://gitbox.apache.org/repos/asf/sis
    svn checkout https://svn.apache.org/repos/asf/sis/data/non-free/

The source code repository contains `geoapi-3.1` and `geoapi-4.0` branches in addition of `master`.
The Apache SIS releases are created from the code on `master` only.
However the actual development occurs on the `geoapi-4.0` branch before to be merged to `master`.
Those branches exist in order to experiment early new API and technologies — since it may impact
the library design — while keeping the releases compatible with officially released environments.
The remaining of this page gives some guidelines about the way SIS source code is organized.

[TOC]



Development branches    {#development}
======================================

Users who want stability are encouraged to build from the `master`.
The master depends on GeoAPI 3.0.1,
which is the [latest GeoAPI][geoapi-stable] released by the Open Geospatial Consortium (OGC).
Developers who want to contribute to Apache SIS are encouraged to use the `geoapi-4.0` branch for now.



GeoAPI 4.0 branch    {#geoapi-4.0}
----------------------------------

The `geoapi-4.0` branch is the recommended development branch for now.
This branch implements the interfaces defined in GeoAPI 4.0 snapshot milestones.
This branch uses new interfaces introduced in GeoAPI 4.0-SNAPSHOT and contains upgrades for changes in existing GeoAPI interfaces.
Some changes in GeoAPI 4.0-SNAPSHOT interfaces are incompatible with GeoAPI 3.0.1 interfaces.
They are caused by changes in the underlying international standards, or by evolution of Java technology.
The content of this branch may be fully merged to `master` in the future, depending on new GeoAPI releases from OGC.



GeoAPI 3.1 branch    {#geoapi-3.1}
----------------------------------

The `geoapi-3.1` branch implements the interfaces defined in [GeoAPI 3.1 snapshot][geoapi-snapshot] milestones.
It has the same content that the `geoapi-4.0` branch, excluding changes that are incompatible with GeoAPI 3.0.1.
Developments happen on `geoapi-4.0` and are periodically merged to `geoapi-3.1` with the necessary modifications.
This branch is used merely as an intermediate step between the development branch (`geoapi-4.0`) and `master`.
Its content may be fully merged to `master` in the future, after new GeoAPI releases from OGC.



Master    {#master}
-------------------

The master is a merge of `geoapi-3.1` branch ported to the interfaces defined by the [GeoAPI stable release][geoapi-stable].
This is the code which is built by the continuous integration system and deployed on the Maven repository.
**Commits on master can not be removed, since `git push --force` are not allowed on this branch.**
Commits should be pushed on above-cited development branch first,
so they can be rearranged if needed before merge to `master`.


### Code differences    {#differences}

The main differences (apart version number) between `master` and `geoapi-3.1/4.0` branches
are the modifications necessary for implementing an older version of GeoAPI interfaces.
In particular, usages of non-released GeoAPI interfaces may be replaced
by direct usages of the corresponding Apache SIS implementation classes.

For security reasons and for avoiding misleading information, the following functionalities are disabled on master for now
(but are still enabled on branches as experimental features). In particular the `Supervisor.ENABLED` flag controls
whether the MBeans documented in the `org.apache.sis.console` package are enabled or not.

  * In `core/sis-utility/src/main/java/org/apache/sis/internal/system/Supervisor.java`, the `ENABLED` flag is set to `false`.
  * In `core/sis-utility/src/main/java/org/apache/sis/internal/util/TemporalUtilities.java`, the `REPORT_MISSING_MODULE` flag is set to `false`.


### Behavioral differences    {#behavior}

Because of changes between GeoAPI 3.0 and GeoAPI 4.0-SNAPSHOT, the following aspects need special care:

  * If `op` is an instance of `PassThroughOperation`, then the `if (op instanceof SingleOperation)` expression
    evaluates to `true` on master but to `false` on SIS development branches.



History    {#history}
---------------------

All developments and tags prior Apache SIS 1.0 were done on a [Subversion][subversion] repository
and can be [browsed online][viewvc].
Tags for Apache SIS versions 0.1 to 0.8 should be fetched from the [SVN repository][svn-sis-tags].
The development branches on that repository were named `JDK8`, `JDK7`, `JDK6` and `trunk`.



Opening Apache SIS in an IDE    {#ide}
======================================

Different SIS branches are available depending on the GeoAPI versions.
The alternatives are listed in [above section](#development).
One thing to take in consideration can be summarized as below:

   * There is no need to build GeoAPI prior working on SIS master.
   * When working on a SIS development branch, we recommend to build GeoAPI 4.0-SNAPSHOT locally first.

While the primarily SIS build system is Maven, the project provides some IDE configuration files for developers convenience.
Before opening the project in an IDE, the source code needs to be downloaded from the source repository
and the project built at least once using Maven:

    :::bash
    git clone https://gitbox.apache.org/repos/asf/sis.git
    cd sis
    mvn install



NetBeans    {#netbeans}
-----------------------

NetBeans can open Maven projects natively. This is the recommended approach for casual working in a small amount of SIS modules.
For extensive work on Apache SIS or for work impacting many modules, it may be more convenient and faster to open Apache SIS as a NetBeans project.
Such pre-configured NetBeans project is available in the `ide-project/NetBeans` directory.
This project will fetch dependencies directly from the `.m2/repository` local directory,
and will refer to the resources `*.utf` files compiled by Maven in the `sis-*/target` directories.
Consequently it is important to run `mvn install` before opening the project
and after any change in the project dependencies or in the resources.

Users can customize their project configuration by editing the `ide-project/NetBeans/nbproject/private/config.properties` file.
The `private` directory is excluded by the versioning system, so it okay to put user-specific information there.
For example in order to overwrite the default location of the local Maven repository and to define a system property at execution time,
one can use:

    :::properties
    maven.repository = /path/to/my/local/repository
    run.jvmargs = -DmyProperty=myValue



Eclipse    {#eclipse}
---------------------

Execute the `svn checkout` to `mvn install` commands documented in the beginning of this section,
then execute the following steps:

   * Execute `mvn eclipse:eclipse` on the command line.
   * Open Eclipse in a new workspace.
   * Go to _Eclipse_ → _Preferences_ → _General_ → _Workspace_.
   * Change _Text file encoding_ to _Other: UTF-8_, press _Apply_, then _Ok_.
   * Go to _File_ → _Import_ → _General_ → _Existing Projects in Workspace_.
   * Choose the `sis` directory and import.



*[ISO]: International Organization for Standardization
*[OGC]: Open Geospatial Consortium

[viewvc]:           http://svn.apache.org/viewvc/sis/
[viewvc-non-free]:  http://svn.apache.org/viewvc/sis/data/non-free/
[subversion]:       http://subversion.apache.org
[git]:              http://git-scm.com
[github-sis]:       https://github.com/apache/sis
[svn-sis-tags]:     https://svn.apache.org/repos/asf/sis/tags/
[geoapi-stable]:    http://www.geoapi.org/3.0/index.html
[geoapi-snapshot]:  http://www.geoapi.org/snapshot/index.html
