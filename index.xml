<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>The Apache SIS™ library on Apache SIS</title>
    <link>https://sis.apache.org/</link>
    <description>Recent content in The Apache SIS™ library on Apache SIS</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language><atom:link href="https://sis.apache.org/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Apache SIS downloads</title>
      <link>https://sis.apache.org/downloads.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>

      <guid>https://sis.apache.org/downloads.html</guid>
      <description>Apache SIS 1.4 is now available. See the release notes for a list of changes since the previous version.
Apache SIS releases are available under the Apache License, Version 2.0. See the NOTICE file contained in each release artifact for applicable copyright attribution notices.
Download ZIP files Verify signatures Build from the sources Setting the module-path Download as Maven dependencies Include non-free resources Download ZIP files Apache SIS is distributed in the form of Java source code in a multi-modules Apache Maven project.</description>
    </item>

    <item>
      <title>Apache SIS team</title>
      <link>https://sis.apache.org/team-list.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>

      <guid>https://sis.apache.org/team-list.html</guid>
      <description>Project Management Committee (PMC) The Project Management Committee (PMC) is the group of people with formal oversight of the project.
Adam Estrada Alexis Manin Andrew Hart Charitha Madusanka Gregory D. Reddin Johann Sorel Joseph F. White Marc Le Bihan Martin Desruisseaux Nga Thien Chung Olivier Nouguier Patrick O&amp;rsquo;Leary Paul Michael Ramirez Peter Karich Ross Laidlaw Sean William McCleese Suresh Marru Travis Pinney Committers Committers are peoples with write access to the source code repository.</description>
    </item>

    <item>
      <title>Checkout source code</title>
      <link>https://sis.apache.org/source.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>

      <guid>https://sis.apache.org/source.html</guid>
      <description>Apache SIS source code is maintained using Git version control, completed by optional data maintained using Subversion version control. Optional data include in particular the EPSG geodetic dataset, which is subject to licensing terms different than Apache ones. This page describes two ways to checkout Apache SIS source code:
A basic checkout with only the main repository, the most stable branch, and no configuration requirement. A more advanced configuration for active SIS developments, using uncommitted (for now) API and including optional data for more extensive tests.</description>
    </item>

    <item>
      <title>Coding conventions</title>
      <link>https://sis.apache.org/coding-conventions.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>

      <guid>https://sis.apache.org/coding-conventions.html</guid>
      <description>This page describes some coding conventions applied in Apache SIS development.
License header Naming convention Internal packages Code formatting Import statements Spaces and line length Brackets Member declarations Exceptions to coding conventions Documentation formatting Javadoc annotations Where to use @since and @version tags HTML elements Paragraphs Javadoc CSS MathML elements License header All Java source files (*.java) shall begin with the current ASF license header as described in ASF Source Header.</description>
    </item>

    <item>
      <title>Command-line interface</title>
      <link>https://sis.apache.org/command-line.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>

      <guid>https://sis.apache.org/command-line.html</guid>
      <description>A command-line interface is provided for extracting information from data files or authority codes, and for performing coordinate operations. That command-line tool is provided for allowing users to experiment some Apache SIS functionalities without writing Java code. For each example, key Java APIs are listed for allowing users to reproduce the functionality in their own application.
Installation Optional dependencies Usage Examples Print Coordinate Reference Systems (CRS) definition Getting a verified EPSG identifier from a Coordinate Reference System Performing coordinate conversions or transformations Extracting ISO 19115 Metadata Performance consideration Installation Select &amp;ldquo;Apache SIS 1.</description>
    </item>

    <item>
      <title>Compute geodetic distances and paths</title>
      <link>https://sis.apache.org/howto/geodetic_paths.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>

      <guid>https://sis.apache.org/howto/geodetic_paths.html</guid>
      <description>The following example computes the geodetic distance between given positions. The geodetic distance is the shortest distance on Earth ellipsoid. Apache SIS can also compute the path as a Béziers curve, with the property that the azimuths at the two curve extremities are preserved.
Direct dependencies Maven coordinates Module info Remarks org.apache.sis.storage:sis-referencing org.apache.sis.referencing Code example Note that all geographic coordinates below express latitude before longitude.
import java.awt.Shape; import org.apache.sis.referencing.CommonCRS; import org.</description>
    </item>

    <item>
      <title>Data formats supported by Apache SIS</title>
      <link>https://sis.apache.org/formats.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>

      <guid>https://sis.apache.org/formats.html</guid>
      <description>Apache SIS can read data from the formats listed below. Some formats are supported in read-only mode, others in read/write modes. Data may be structured as vectors or rasters, which in Apache SIS are mapped to the FeatureSet and GridCoverageResource interfaces respectively. Some formats can contain an arbitrary number of feature types or rasters, in which case the root resource will be Aggregate.
Format Capability Module Type of resource CSV Read org.</description>
    </item>

    <item>
      <title>Determine if two CRS are functionally equal</title>
      <link>https://sis.apache.org/howto/crs_equality.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>

      <guid>https://sis.apache.org/howto/crs_equality.html</guid>
      <description>Two Coordinate Reference Systems may not be considered equal if they are associated to different metadata (name, identifiers, scope, domain of validity, remarks), even though they represent the same logical CRS. In order to test if two CRS are functionally equivalent, Utilities​.equals­Ignore­Metadata(myFirstCRS, mySecondCRS) can be used.
In some cases, equals­Ignore­Metadata(…) may fail to see that two reference systems are equal. It may happen for example when two map projections are defined with different parameters, but are mathematically equivalent.</description>
    </item>

    <item>
      <title>Frequently asked questions</title>
      <link>https://sis.apache.org/faq.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>

      <guid>https://sis.apache.org/faq.html</guid>
      <description>This page lists some Frequently Asked Questions (FAQ) when using Apache SIS.
Referencing Getting started How do I get a Coordinate Reference System? How do I transform a coordinate? Which map projections are supported? Coordinate Reference Systems What is the Google projection? What is the axis order issue and how is it addressed? Is IdentifiedObjects.lookupEPSG(…) a reliable inverse of CRS.forCode(…)? Are CRS objects safe for use as keys in HashMap? Coordinate transformations My transformed coordinates are totally wrong!</description>
    </item>

    <item>
      <title>From data lake to data cube</title>
      <link>https://sis.apache.org/howto/datalake_to_datacube.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>

      <guid>https://sis.apache.org/howto/datalake_to_datacube.html</guid>
      <description>This example opens a few files where each file represent a slice in a data cube. Then the slices are aggregated together in a single multi-dimensional data cube. For example each file may be a raster representing Sea Surface Temperature (SST) at a specific day, and those files can be a aggregated in a single three-dimensional raster with a temporal dimension.
A current limitation is that each slice must have the same number of dimensions than the data cube.</description>
    </item>

    <item>
      <title>Geographic bounding box of a data file</title>
      <link>https://sis.apache.org/howto/export_metadata_to_xml.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>

      <guid>https://sis.apache.org/howto/export_metadata_to_xml.html</guid>
      <description>This example prints the metadata of a netCDF file in the XML format defined by the ISO 19115-3 international standard. The coverage values are not read, only the netCDF file header is read.
Direct dependencies Maven coordinates Module info Remarks org.apache.sis.storage:sis-netcdf org.apache.sis.storage.netcdf edu.ucar:cdm-core For netCDF-4 or HDF5 The cdm-core dependency can be omitted for netCDF-3 (a.k.a. &amp;ldquo;classic&amp;rdquo;), GeoTIFF or any other formats supported by Apache SIS. For the dependencies required for reading GeoTIFF instead of netCDF files, see the geographic bounding box code example.</description>
    </item>

    <item>
      <title>Geographic bounding box of a data file</title>
      <link>https://sis.apache.org/howto/geographic_bounding_box.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>

      <guid>https://sis.apache.org/howto/geographic_bounding_box.html</guid>
      <description>This example prints the bounding box of a GeoTIFF image. The pixel values are not read, only the GeoTIFF file header is read. If the file contains many images, the bounding box of each image is printed.
Direct dependencies Maven coordinates Module info Remarks org.apache.sis.storage:sis-geotiff org.apache.sis.storage.geotiff org.apache.sis.non-free:sis-embedded-data org.apache.sis.referencing.database Optional. Non-Apache license. The EPSG dependency may or may not be needed, depending how the Coordinate Reference System (CRS) is encoded in the GeoTIFF file.</description>
    </item>

    <item>
      <title>Get raster values at geographic coordinates</title>
      <link>https://sis.apache.org/howto/raster_values_at_geographic_coordinates.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>

      <guid>https://sis.apache.org/howto/raster_values_at_geographic_coordinates.html</guid>
      <description>This example fetches values at given geospatial coordinates in a raster. The coordinates can be expressed in different Coordinate Reference System (CRS). Conversions from geographic or projected coordinates to pixel coordinates, optionally followed by conversions from raster data to units of measurement, are done automatically. Raster data and spatiotemporal coordinates can have more than two dimensions.
This example assumes a preloaded three-dimensional raster. For the loading part, see read from a netCDF file or read from a GeoTIFF file code examples.</description>
    </item>

    <item>
      <title>Get raster values at pixel coordinates</title>
      <link>https://sis.apache.org/howto/raster_values_at_pixel_coordinates.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>

      <guid>https://sis.apache.org/howto/raster_values_at_pixel_coordinates.html</guid>
      <description>This example fetches values at given pixel coordinates in a raster. This example assumes a preloaded three-dimensional raster. For the loading part, see read from a netCDF file or read from a GeoTIFF file code examples.
Some file formats store values as integers for compactness reasons, but provide a transfer function for converting those integers to &amp;ldquo;real world&amp;rdquo; values. Apache SIS can provide either the original integers or the converted values, at user&amp;rsquo;s choice.</description>
    </item>

    <item>
      <title>Get the EPSG code or URN of an existing CRS</title>
      <link>https://sis.apache.org/howto/lookup_crs_urn.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>

      <guid>https://sis.apache.org/howto/lookup_crs_urn.html</guid>
      <description>The identifier of a Coordinate Reference System (CRS) object can be obtained by the getIdentifiers() method, which usually return a collection of zero or one element. If the CRS has been created from a Well Known Text (WKT) parsing and the WKT ends with an AUTHORITY[&amp;quot;EPSG&amp;quot;, &amp;quot;xxxx&amp;quot;] (WKT version 1) or ID[&amp;quot;EPSG&amp;quot;, xxxx] (WKT version 2) element, then the identifier (an EPSG numerical code in this example) is the xxxx value in that element.</description>
    </item>

    <item>
      <title>Handle rasters bigger than memory</title>
      <link>https://sis.apache.org/howto/rasters_bigger_than_memory.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>

      <guid>https://sis.apache.org/howto/rasters_bigger_than_memory.html</guid>
      <description>This example opens a big GeoTIFF file without reading the tiles immediately. Instead, tiles will be read only when requested by a call to the Java2D RenderedImage.getTile(int, int) method. Loaded tiles are cached by soft references, i.e. they may be discarted and reloaded when needed again. This approach allows processing of raster data larger than memory, provided that the application does not request all tiles at once. It integrates well with operations provided by Apache SIS such as raster resampling and getting values at geographic coordinates.</description>
    </item>

    <item>
      <title>How to use EPSG geodetic dataset</title>
      <link>https://sis.apache.org/epsg.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>

      <guid>https://sis.apache.org/epsg.html</guid>
      <description>The EPSG geodetic dataset is a de-facto standard providing thousands of Coordinate Reference System (CRS) definitions together with information about how to perform coordinate operations, their accuracies and their domains of validity. The EPSG dataset is owned and maintained by the International Association of Oil &amp;amp; Gas producers. Usage of EPSG dataset with Apache SIS is optional but strongly recommended: without that geodetic dataset, only a small subset of CRS definitions will be available (basically the constants enumerated in the CommonCRS Java class) unless full definitions are provided in Well Known Text (WKT) or Geographic Markup Language (GML) formats.</description>
    </item>

    <item>
      <title>Instantiate a UTM projection</title>
      <link>https://sis.apache.org/howto/instantiate_utm_projection.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>

      <guid>https://sis.apache.org/howto/instantiate_utm_projection.html</guid>
      <description>The Universal Transverse Mercator (UTM) projection divides the world in 60 zones. If the UTM zone is unknown, an easy way to instantiate the projection is to invoke the universal(…) method on one of the CommonCRS predefined constants. That method receives in argument a geographic coordinate in (latitude, longitude) order and computes the UTM zone from it. It takes in account the special cases of Norway and Svalbard.
An alternative, more standard, way using geographic coordinates is to format an &amp;ldquo;AUTO&amp;rdquo; authority code.</description>
    </item>

    <item>
      <title>JavaFX application</title>
      <link>https://sis.apache.org/javafx.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>

      <guid>https://sis.apache.org/javafx.html</guid>
      <description>Apache SIS provides an optional JavaFX application for testing SIS capability to read, transform and visualize data files. (note: a command line interface is also available). The graphical application is in early development stage and very far from providing all services that we can expect from a Geographic Information System (GIS). Furthermore this application covers a very small subset of Apache SIS capabilities. But it can give an idea of what is available there.</description>
    </item>

    <item>
      <title>Mailing lists</title>
      <link>https://sis.apache.org/mail-lists.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>

      <guid>https://sis.apache.org/mail-lists.html</guid>
      <description>We welcome you to join mailing lists and let us know about your thoughts or ideas about Apache SIS. Everyone can subscribe, but note that all emails sent to those lists are archived and publicly readable on the web. See Public Forum Archive Policy for more information.
Cross-project mailing lists Geospatial mailing list Apache SIS mailing lists User mailing list Developer mailing list Issues mailing list Commit mailing list Cross-project mailing lists Geospatial mailing list This is where peoples can ask questions or discuss about geospatial topics that are not specific to Apache SIS.</description>
    </item>

    <item>
      <title>New contributor</title>
      <link>https://sis.apache.org/contributor.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>

      <guid>https://sis.apache.org/contributor.html</guid>
      <description>Improving and extending Apache SIS requires extensive knowledge of geographic information science, object oriented programming, the Java language, and of the library itself. Contributors should expect that they will need to learn a great deal before being able to become productive. However, the effort required to become productive should improve the contributor&amp;rsquo;s understanding and knowledge of geographic information systems, of geodetic and geographic science, and of effective computer programming.
This document is expected to evolve as the Apache SIS project develops its own mode of operation.</description>
    </item>

    <item>
      <title>Parallel computation</title>
      <link>https://sis.apache.org/howto/parallel_computation.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>

      <guid>https://sis.apache.org/howto/parallel_computation.html</guid>
      <description>Some grid coverages will read or compute chunks of data only when first requested. For example when a coverage is the result of a reprojection, or when a big coverage uses deferred tile reading. However if tiles are always requested in the same thread, it will result in a sequential, mono-threaded computation. Furthermore it may cause a lot of seek or &amp;ldquo;HTTP range&amp;rdquo; operations if tiles are read in random order.</description>
    </item>

    <item>
      <title>Parse and format MGRS codes</title>
      <link>https://sis.apache.org/howto/parse_and_format_mgrs_codes.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>

      <guid>https://sis.apache.org/howto/parse_and_format_mgrs_codes.html</guid>
      <description>The following example converts geographic coordinates to Military Grid Reference System (MGRS) codes and conversely. MGRS codes can be seen as a kind of GeoHash but with better properties. Apache SIS supports also GeoHash if desired, in a way similar to this example.
Direct dependencies Maven coordinates Module info Remarks org.apache.sis.storage:sis-referencing org.apache.sis.referencing Code example Note that all geographic coordinates below express latitude before longitude.
import org.apache.sis.geometry.DirectPosition2D; import org.apache.sis.referencing.CommonCRS; import org.apache.sis.referencing.gazetteer.MilitaryGridReferenceSystem; import org.</description>
    </item>

    <item>
      <title>Read raster from a GeoTIFF file</title>
      <link>https://sis.apache.org/howto/read_geotiff.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>

      <guid>https://sis.apache.org/howto/read_geotiff.html</guid>
      <description>This example reads data in GeoTIFF format. Contrarily to other formats such as PNG or JPEG, a GeoTIFF file can contain an arbitrary number of images. For this reason, GeoTiffStore does not implement directly GridCoverageResource. Instead, GeoTiffStore implements the Aggregate interface.
This example assumes that the raster, optionally clipped to a subregion, can fit in memory. For potentially much bigger rasters, see rasters bigger than memory code example.
Direct dependencies Maven coordinates Module info Remarks org.</description>
    </item>

    <item>
      <title>Read raster from a netCDF file</title>
      <link>https://sis.apache.org/howto/read_netcdf.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>

      <guid>https://sis.apache.org/howto/read_netcdf.html</guid>
      <description>This example reads data in netCDF format. Contrarily to other formats such as PNG or JPEG, a netCDF file can contain an arbitrary number of variables with none of them identified as the main data. Furthermore those data are not necessarily rasters. For this reason, NetcdfStore does not implement directly GridCoverageResource. Instead, NetcdfStore implements the Aggregate interface and the desired variable must be specified. The variables may be instances of GridCoverageResource, but not necessarily.</description>
    </item>

    <item>
      <title>Recommended code patterns</title>
      <link>https://sis.apache.org/code-patterns.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>

      <guid>https://sis.apache.org/code-patterns.html</guid>
      <description>This page lists some recommended code pattern for developing or using Apache SIS.
Referencing Never explicitly swap coordinates for axis order Rasters and coverages Georeference images with affine transforms, not bounding boxes Do not cast Raster to WritableRaster International Specify timezone Replace underscores by spaces before sorting Loop over character sequences using code points Logging Referencing This section lists recommended code pattern when using the sis-referencing module.
Never explicitly swap coordinates for axis order The axis order issue causes lot of confusion, and developers are sometimes tempted to swap their coordinate values in order to comply with some expected axis ordering.</description>
    </item>

    <item>
      <title>Release management</title>
      <link>https://sis.apache.org/release-management.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>

      <guid>https://sis.apache.org/release-management.html</guid>
      <description>This page describes how to create and deploy the SIS Maven artifacts, binary bundle, javadoc and list of API changes. The Release FAQ page describes the foundation wide policies. Instructions on this page describe the steps specific to SIS (we do not use the mvn release command). The intended audiences are SIS release managers.
Prerequisites Directory layout Generate GPG key Web of trust Gradle configuration Maven configuration Specific release configuration Review project status before branching Update the list of supported CRS Prepare release notes Create release artifacts Initialize the distribution directory Generate Javadoc Publish Maven artifacts Stage the parent POM Stage the project arfifacts Stage the non-free resources Stage the source, binary and Javadoc artifacts Integration test Test the binary Test the Maven artifacts Test the downloads Prepare Web site Put the release candidate up for a vote Recovering from a vetoed release Finalize the release Update other web sites (JIRA, GitHub, Wiki): Announce the release Update main branch for the next development cycle Delete old artifacts on Maven snapshot repository Prerequisites The instructions in this section need to be done only once per new release manager, or when configuring a new machine for performing the releases.</description>
    </item>

    <item>
      <title>Resample a raster</title>
      <link>https://sis.apache.org/howto/resample_raster.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>

      <guid>https://sis.apache.org/howto/resample_raster.html</guid>
      <description>This example reprojects a raster to a different Coordinate Reference System (CRS). This example assumes a preloaded two-dimensional raster. For the loading part, see read from a netCDF file or read from a GeoTIFF file code examples.
Direct dependencies Maven coordinates Module info Remarks org.apache.sis.code:sis-feature org.apache.sis.feature org.apache.sis.non-free:sis-embedded-data org.apache.sis.referencing.database Non-Apache license. The EPSG dependency is necessary for this example because a Coordinate Reference System (CRS) is instantiated from its EPSG code. But it would also be possible to specify a CRS without EPSG code, for example using Well Known Text (WKT) format.</description>
    </item>

    <item>
      <title>SIS 0.1-incubating Release notes</title>
      <link>https://sis.apache.org/release-notes/0.1.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>

      <guid>https://sis.apache.org/release-notes/0.1.html</guid>
      <description>Release date: 2010-11-10 Next release Previous release Incompatible changes Noticeable changes Requirement: Java 5 This is the first release of Apache SIS (incubator).
Incompatible changes Not applicable.
Noticeable changes New Features [SIS-1] — Import LocalLucene code into SIS [SIS-5] — Website logo [SIS-6] — Create DOAP file for projects.a.o [SIS-7] — Top level pom for SIS [SIS-12] — Write basic SIS documentation for CLI and for WS layer [SIS-15] — Bake in Demo JSP page for initial release Improvements [SIS-2] — Stand up SIS website [SIS-3] — Refactor SIS [SIS-14] — Use LatLon class instead of plain double points in QuadTreeData interface [SIS-23] — Brand demo.</description>
    </item>

    <item>
      <title>SIS 0.2-incubating Release notes</title>
      <link>https://sis.apache.org/release-notes/0.2.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>

      <guid>https://sis.apache.org/release-notes/0.2.html</guid>
      <description>Release date: 2012-07-23 Next release Previous release Incompatible changes Noticeable changes Requirement: Java 6 Release from incubator.
Incompatible changes Not determined.
Noticeable changes New Features [SIS-30] — Jetty Integration Improvements [SIS-35] — Include JDOM license in the NOTICE file and remove servlet dependency Bug fixes [SIS-25] — Location servlet doesn&amp;rsquo;t return correct coordinates for point-radius query region [SIS-26] — Use of Java 1.6 Annotation in /sis-core/src/main/java/org/apache/sis/storage/GeoRSSData.java [SIS-29] — Website must display disclaimer text [SIS-34] — LICENSE/NOTICE file is in incorrect location in SIS webapp Tasks [SIS-27] — Update sis-parent/pom.</description>
    </item>

    <item>
      <title>SIS 0.3 Release notes</title>
      <link>https://sis.apache.org/release-notes/0.3.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>

      <guid>https://sis.apache.org/release-notes/0.3.html</guid>
      <description>Release date: 2013-08-17 Next release Previous release Incompatible changes Noticeable changes Requirement: Java 6 This is the first Apache SIS release as a graduated project (outside incubator).
Incompatible changes Not determined.
Noticeable changes New Features [SIS-62] — Create a sis-utility module [SIS-52] — Create a sis-metadata module [SIS-55] — Skeleton implementation of GeoAPI Citation [SIS-46] — Add sis-console module to current SIS project [SIS-66] — Create new Range class to avoid licensing issues [SIS-77] — Provide an IDE build for Eclipse Improvements [SIS-57] — A Logo for SIS [SIS-31] — Website needs a facelift [SIS-38] — Add the missing documentation comments for SIS-core storage [SIS-40] — Add the missing documentation comments for SIS WS layer [SIS-41] — Improve the demo.</description>
    </item>

    <item>
      <title>SIS 0.4 Release notes</title>
      <link>https://sis.apache.org/release-notes/0.4.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>

      <guid>https://sis.apache.org/release-notes/0.4.html</guid>
      <description>Release date: 2014-04-07 Next release Previous release Incompatible changes Noticeable changes Requirement: Java 6 Incompatible changes Not determined.
Noticeable changes New Features Partial implementation of ISO 19111 — Referencing by coordinates. Partial implementation of ISO 19162 — Well Known Text 2. Improvements [SIS-68] — Remove LatLon class and replace with DirectPosition [SIS-69] — Remove LatLonRect and replace with Envelope class [SIS-88] — Reduce size of public API [SIS-115] — Ability to set NilReason on Boolean, Integer, Double and String objects [SIS-119] — Support gmx:FileName and gmx:MimeFileType elements [SIS-121] — AngleFormat should be able to optionally omit zero fields [SIS-143] — DefaultGeographicBoundingBox should support spanning of anti-meridian [SIS-158] — Complete JAXB annotations for datum objects Bug fixes [SIS-112] — Maven site on Jenkins has broken links [SIS-122] — DefaultRepresentativeFraction needs to implement IdentifiedObject [SIS-132] — Better support for eclipse IDE [SIS-133] — ResourceCompilerMojo should execute only when properties files are modified [SIS-134] — ClassCastException in org.</description>
    </item>

    <item>
      <title>SIS 0.5 Release notes</title>
      <link>https://sis.apache.org/release-notes/0.5.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>

      <guid>https://sis.apache.org/release-notes/0.5.html</guid>
      <description>Release date: 2015-02-12 Next release Previous release Incompatible changes Noticeable changes Requirement: Java 6 The initial plan for Apache SIS 0.5 was to complete the implementation of Referencing by coordinates (ISO 19111), which started in SIS 0.4. However this work is not yet finished and is re-targeted for SIS 0.6 release. Nevertheless this SIS 0.5 release contains an upgrade of spatial metadata (ISO 19115-1) from the standard published in 2003 to the revision published in 2014 (SIS-94).</description>
    </item>

    <item>
      <title>SIS 0.6 Release notes</title>
      <link>https://sis.apache.org/release-notes/0.6.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>

      <guid>https://sis.apache.org/release-notes/0.6.html</guid>
      <description>Release date: 2015-09-16 Next release Previous release Incompatible changes Noticeable changes Requirement: Java 6 The main new features of Apache SIS 0.6 are:
Support of Well Known Text version 1 and 2 (ISO 19162) for Coordinate Reference System objects. Support of Geographic Markup Language (GML) version 3.2 (ISO 19136) for Coordinate Reference System objects, except DerivedCRS, ConcatenatedOperation and PassThroughOperation. Support of Mercator, Transverse Mercator, Lambert Conic Conformal and Polar stereographic map projections.</description>
    </item>

    <item>
      <title>SIS 0.7 Release notes</title>
      <link>https://sis.apache.org/release-notes/0.7.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>

      <guid>https://sis.apache.org/release-notes/0.7.html</guid>
      <description>Release date: 2016-05-27 Next release Previous release Incompatible changes Noticeable changes Requirement: Java 6 The main new features of Apache SIS 0.7 are:
Creation of Coordinate Reference System (CRS) objects from an EPSG code. The list of EPSG codes supported by latest SIS release can be viewed here. Find coordinate operation paths from a pair of CRS, using the EPSG geodetic dataset if possible. Completion of Geographic Markup Language (GML) version 3.</description>
    </item>

    <item>
      <title>SIS 0.8 Release notes</title>
      <link>https://sis.apache.org/release-notes/0.8.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>

      <guid>https://sis.apache.org/release-notes/0.8.html</guid>
      <description>Release date: 2017-11-24 Next release Previous release Incompatible changes Noticeable changes Requirement: Java 7 An important change in Apache SIS 0.8 is the replacement of the deprecated JSR-275 dependency by JSR-363 — Units of Measurement API (this implies an upgrade from GeoAPI 3.0.0 to GeoAPI 3.0.1). Users are encouraged to upgrade to Apache SIS 0.8 or later for resolving this dependency issue.
Incompatible changes Not determined.
Noticeable changes New Features [SIS-128] — Implement the JSR-363 javax.</description>
    </item>

    <item>
      <title>SIS 1.0 Release notes</title>
      <link>https://sis.apache.org/release-notes/1.0.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>

      <guid>https://sis.apache.org/release-notes/1.0.html</guid>
      <description>Release date: 2019-09-27 Next release Previous release Incompatible changes Noticeable changes Requirement: Java 8 + JAXB (either bundled in the JDK or provided) Apache SIS 1.0 can marshal and unmarshal metadata in XML documents using the new ISO 19115-3 standard. The previous ISO 19139 standard is still supported and automatically recognized at unmarshalling time. This release also contains improvements in reading netCDF files and a beginning of raster support.</description>
    </item>

    <item>
      <title>SIS 1.1 Release notes</title>
      <link>https://sis.apache.org/release-notes/1.1.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>

      <guid>https://sis.apache.org/release-notes/1.1.html</guid>
      <description>Release date: 2021-10-06 Next release Previous release Incompatible changes Noticeable changes Requirement: Java 8 Apache SIS 1.1 can read GeoTIFF images, apply raster reprojections and create isolines from rasters. It can read features from a SQL database with the FeatureType inferred by analyzing the database schema. Features can be filtered by the filter API added in this release, including with geometric operations defined by SQLMM.
Incompatible changes In the sis-utility module, the following classes moved to the org.</description>
    </item>

    <item>
      <title>SIS 1.2 Release notes</title>
      <link>https://sis.apache.org/release-notes/1.2.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>

      <guid>https://sis.apache.org/release-notes/1.2.html</guid>
      <description>Release date: 2022-05-18 Next release Previous release Incompatible changes Noticeable changes Requirement: Java 8 Apache SIS 1.2 can read World Files and ESRI ASCII grid and BIL/BIP/BSQ rasters, in addition to GeoTIFF support added in SIS 1.1, and in addition to netCDF support added in previous releases. This release also contains various bug fixes improving the stability.
Incompatible changes None.
Noticeable changes New Features [SIS-529] — Provide native GeoTIFF metadata [SIS-541] — Add &amp;ldquo;World File&amp;rdquo; reader and writer [SIS-540] — Add an ESRI ASCII Grid reader and writer [SIS-543] — Add a BIL/BIP/BSQ data store [SIS-524] — Image masking based on a geometry [SIS-528] — Add a &amp;ldquo;system monitor&amp;rdquo; with visual indication of seek operations [SIS-533] — Add &amp;ldquo;Rotated Latitude/Longitude&amp;rdquo; coordinate operation [SIS-228] — Lambert Azimuthal Equal Area (EPSG:9820) [SIS-229] — Lambert Azimuthal Equal Area (Spherical) (EPSG:1027) [SIS-542] — Mercator auxiliary sphere [SIS-538] — Support ESRI WKT element GEOGTRAN [SIS-539] — Create a &amp;ldquo;cloud&amp;rdquo; group of modules, starting with AWS S3 Improvements [SIS-300] — Complete the information provided in Citations constants [SIS-520] — SQLStore should avoid creating features with cyclic associations [SIS-514] — GridGeometry.</description>
    </item>

    <item>
      <title>SIS 1.3 Release notes</title>
      <link>https://sis.apache.org/release-notes/1.3.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>

      <guid>https://sis.apache.org/release-notes/1.3.html</guid>
      <description>Release date: 2022-12-25 Next release Previous release Incompatible changes Noticeable changes Requirement: Java 8 This release contains an upgrade of the org.apache.sis.metadata.iso.quality package to the ISO 19157:2013 international standard. This release also contains various bug fixes improving the stability.
Incompatible changes The following changes in Apache SIS 1.3 are incompatibles with the previous release (SIS 1.2):
In the org.apache.sis.coverage.grid package, the GridEvaluator class has been replaced by the GridCoverage.Evaluator interface.</description>
    </item>

    <item>
      <title>SIS 1.4 Release notes</title>
      <link>https://sis.apache.org/release-notes/1.4.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>

      <guid>https://sis.apache.org/release-notes/1.4.html</guid>
      <description>Release date: 2023-01-10 Next release Previous release Incompatible changes Noticeable changes Requirement: Java 11 This release contains the upgrade from Java 8 to Java 11, including the migration to Java Platform Module System (JPMS). This release also contains various bug fixes improving the stability. Cloud Optimized GeoTIFF (COG) support has been completed with the automatic use of HTTP Range requests.
In this release, the source code of Apache SIS project has been restructured with a new directory layout.</description>
    </item>

    <item>
      <title>Standards implemented by Apache SIS</title>
      <link>https://sis.apache.org/standards.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>

      <guid>https://sis.apache.org/standards.html</guid>
      <description>Apache SIS implements the following standards from the Open Geospatial Consortium (OGC), the International Organization for Standardization (ISO) or the Java Community Process (JCP). The same standard is sometimes published jointly by both OGC and ISO organizations. Links to free versions of the standards are given when available. The Upgrade needed column indicates that a more recent version of the standard is available but that Apache SIS has not yet been upgraded to that version.</description>
    </item>

    <item>
      <title>Transform coordinates</title>
      <link>https://sis.apache.org/howto/transform_coordinates.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>

      <guid>https://sis.apache.org/howto/transform_coordinates.html</guid>
      <description>The following Java code projects geographic coordinates from the World Geodetic System 1984 (WGS84) to WGS 84 / UTM zone 33N. In order to make the example a little bit simpler, this code uses predefined constants given by the CommonCRS convenience class. But more advanced applications may use EPSG codes or definitions in Well-Known Text (WKT) instead.
Note: if the result of a coordinate transformation seems wrong, see the FAQ page.</description>
    </item>

    <item>
      <title>Transform envelopes (bounding boxes)</title>
      <link>https://sis.apache.org/howto/transform_envelopes.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>

      <guid>https://sis.apache.org/howto/transform_envelopes.html</guid>
      <description>The transformation of envelopes (or bounding boxes) is a much more difficult task than transforming the four corners of a rectangle. The rectangle straight lines in source CRS may become curves in the target CRS with minimum and maximum values that are not located in any corner. The calculation is also more complicated if the envelope contains a pole or crosses the anti-meridian. Apache SIS handles those complexities in convenience static methods.</description>
    </item>

    <item>
      <title>Union or intersection of envelopes in different CRS</title>
      <link>https://sis.apache.org/howto/envelopes_in_different_crs.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>

      <guid>https://sis.apache.org/howto/envelopes_in_different_crs.html</guid>
      <description>Before to compute the union or intersection of two or more envelopes (bounding boxes), all envelopes must be transformed to the same Coordinate Reference System (CRS). But the choice of a common CRS is not easy. We must verify that all envelopes are inside the domain of validity of the common CRS, which may require to choose a common CRS different than the CRS of all envelopes. Apache SIS can handle this task automatically.</description>
    </item>

    <item>
      <title>Write a raster to a file</title>
      <link>https://sis.apache.org/howto/write_raster.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>

      <guid>https://sis.apache.org/howto/write_raster.html</guid>
      <description>This example saves a raster in PNG format together with its WorldFile PRJ and PGW auxiliary files. This example assumes a preloaded raster. For the loading part, see read from a netCDF file or read from a GeoTIFF file code examples.
Direct dependencies Maven coordinates Module info Remarks org.apache.sis.storage:sis-storage org.apache.sis.storage Code example The file name in following code need to be updated for yours data.
import java.io.File; import org.apache.sis.storage.DataStore; import org.</description>
    </item>

  </channel>
</rss>
